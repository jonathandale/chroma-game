;; Analyzed by ClojureScript 0.0-3211
{:use-macros nil, :excludes #{}, :name chroma-game.handlers, :imports {Uri goog.Uri, Jsonp goog.net.Jsonp}, :requires {Uri goog.Uri, Jsonp goog.net.Jsonp, clojure.string clojure.string, chroma chromajs, chromajs chromajs, db chroma-game.db, chroma-game.db chroma-game.db, re-frame.core re-frame.core}, :uses {join clojure.string, dispatch re-frame.core, register-handler re-frame.core}, :defs {handle-swatch-click {:protocol-inline nil, :meta {:arglists (quote ([db resp])), :end-column 26, :end-line 62, :column 7, :line 62, :file "/Users/jondale/projects/chroma-game/src/cljs/chroma_game/handlers.cljs"}, :name chroma-game.handlers/handle-swatch-click, :variadic false, :file "src/cljs/chroma_game/handlers.cljs", :end-column 26, :method-params ([db resp]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 62, :end-line 62, :max-fixed-arity 2, :fn-var true, :arglists (quote ([db resp])), :test true}, populate-swatches {:protocol-inline nil, :meta {:arglists (quote ([db])), :end-column 24, :end-line 59, :column 7, :line 59, :file "/Users/jondale/projects/chroma-game/src/cljs/chroma_game/handlers.cljs"}, :name chroma-game.handlers/populate-swatches, :variadic false, :file "src/cljs/chroma_game/handlers.cljs", :end-column 24, :method-params ([db]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 59, :end-line 59, :max-fixed-arity 1, :fn-var true, :arglists (quote ([db])), :test true}, pick-colors {:protocol-inline nil, :meta {:arglists (quote ([db])), :end-column 18, :end-line 43, :column 7, :line 43, :file "/Users/jondale/projects/chroma-game/src/cljs/chroma_game/handlers.cljs"}, :name chroma-game.handlers/pick-colors, :variadic false, :file "src/cljs/chroma_game/handlers.cljs", :end-column 18, :method-params ([db]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 43, :end-line 43, :max-fixed-arity 1, :fn-var true, :arglists (quote ([db])), :test true}, midpoint {:protocol-inline nil, :meta {:arglists (quote ([basicColors from to])), :end-column 15, :end-line 36, :column 7, :line 36, :file "/Users/jondale/projects/chroma-game/src/cljs/chroma_game/handlers.cljs"}, :name chroma-game.handlers/midpoint, :variadic false, :file "src/cljs/chroma_game/handlers.cljs", :end-column 15, :method-params ([basicColors from to]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 36, :end-line 36, :max-fixed-arity 3, :fn-var true, :arglists (quote ([basicColors from to])), :test true}, print-colors {:protocol-inline nil, :meta {:arglists (quote ([colors])), :end-column 19, :end-line 28, :column 7, :line 28, :file "/Users/jondale/projects/chroma-game/src/cljs/chroma_game/handlers.cljs"}, :name chroma-game.handlers/print-colors, :variadic false, :file "src/cljs/chroma_game/handlers.cljs", :end-column 19, :method-params ([colors]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 28, :end-line 28, :max-fixed-arity 1, :fn-var true, :arglists (quote ([colors])), :test true}, jsonp {:protocol-inline nil, :meta {:arglists (quote ([uri success error])), :end-column 12, :end-line 22, :column 7, :line 22, :file "/Users/jondale/projects/chroma-game/src/cljs/chroma_game/handlers.cljs"}, :name chroma-game.handlers/jsonp, :variadic false, :file "src/cljs/chroma_game/handlers.cljs", :end-column 12, :method-params ([uri success error]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 22, :end-line 22, :max-fixed-arity 3, :fn-var true, :arglists (quote ([uri success error])), :test true}, keycode->direction {:meta {:end-column 24, :end-line 18, :column 6, :line 18, :file "/Users/jondale/projects/chroma-game/src/cljs/chroma_game/handlers.cljs"}, :file "src/cljs/chroma_game/handlers.cljs", :line 18, :column 1, :end-line 18, :end-column 24, :test true, :name chroma-game.handlers/keycode->direction}, colorApiUrl {:meta {:end-column 17, :end-line 10, :column 6, :line 10, :file "/Users/jondale/projects/chroma-game/src/cljs/chroma_game/handlers.cljs"}, :file "src/cljs/chroma_game/handlers.cljs", :line 10, :column 1, :end-line 10, :end-column 17, :test true, :name chroma-game.handlers/colorApiUrl}}, :require-macros nil, :cljs.analyzer/constants {:order [:rgb :weighting :colors :from :to :midpoint :swatches :pass :fail :intro? :points :initialize-db :request-colors :handle-color-response :handle-color-error :swatch-click :key-down], :seen #{:initialize-db :swatch-click :handle-color-response :rgb :swatches :request-colors :midpoint :key-down :colors :points :weighting :handle-color-error :fail :intro? :from :pass :to}}, :doc nil}